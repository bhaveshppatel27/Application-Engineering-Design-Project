/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Customer;

import Business.Customer.Customer;
import Business.WaterSupplyAdmin.SensorValue;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.Date;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bhavesh Patel
 */
public class ManageSensorJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageSensorJPanel
     */
    
    
    private JPanel container;
    private UserAccount userAccount;
    private Customer customer;
    private SensorValue sensorValue;
    public ManageSensorJPanel(JPanel container,Customer customer,SensorValue sensorValue) {
        initComponents();
        this.container = container;
        this.customer = customer;
        this.sensorValue =sensorValue;
        
        name.setText(customer.getName());
        sensorName.setText(customer.getTargetSensor().getSensorName());
        volume.setText(String.valueOf(customer.getVolumeAvailable()));
        volume.setEnabled(false);
        
        if(sensorValue.getFlowrate() < customer.getSourceSensor().getSensorValue().getFlowrate()){
            flow.setEnabled(false);
            leakage.setEnabled(false);
        }
        
        populateTable();
        table.setAutoCreateRowSorter(true);
    }
    
    private void populateTable(){
        
         DefaultTableModel model = (DefaultTableModel) table.getModel();
         model.setRowCount(0);
        
        for(SensorValue sensorValue : customer.getTargetSensor().getSensorValueList()){

            Object[] row = new Object[3];
            row[0] = sensorValue.getFlowrate();
            row[1] = sensorValue.getPressure();
            row[2] = sensorValue.getDate();
            model.addRow(row);
            
        }    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        sensorName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        flow = new javax.swing.JTextField();
        leakage = new javax.swing.JButton();
        volume = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Customer:");

        sensorName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel2.setText("Supply Volume Available (Gallons)");

        jLabel4.setText("Flow Rate(Gallons/hr)");

        leakage.setText("Change");
        leakage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leakageActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Sensor Name:");

        name.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Flow Rate", "Pressure", "Time"
            }
        ));
        jScrollPane1.setViewportView(table);

        jButton2.setText("<<Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(33, 33, 33)
                                .addComponent(volume, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(62, 62, 62)
                                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addGap(29, 29, 29)
                                .addComponent(sensorName, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 347, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(151, 151, 151)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(leakage)
                                            .addComponent(jLabel4))
                                        .addGap(12, 12, 12)
                                        .addComponent(flow, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(231, 231, 231)))))
                .addGap(58, 58, 58))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6)
                        .addComponent(sensorName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(volume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(128, 128, 128)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(flow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(41, 41, 41)
                .addComponent(leakage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 301, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(36, 36, 36))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void leakageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leakageActionPerformed
        float b =0;

        try{
           b= Float.parseFloat(flow.getText());

        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Input Correct Flowrate");
            return;
        }
        if(b<0){
            JOptionPane.showMessageDialog(null, "Flow rate cannot be negative");
            return;
        }
        else if(b > customer.getSourceSensor().getSensorValue().getFlowrate()){
            JOptionPane.showMessageDialog(null, "Target Flow rate cannot be greater than source flow rate");
            return;
        }
        if(b == 0){
            customer.setVolumeAvailable(0);
            volume.setText(String.valueOf(customer.getVolumeAvailable()));
        }
        else{
            customer.setVolumeAvailable(customer.getSourceSensor().getSupplyVolume());
            volume.setText(String.valueOf(customer.getVolumeAvailable()));
        }
        float a = customer.getSourceSensor().getSensorValue().getPressure();
        Random r = new Random();
        float max = a;
        float min = a - (a-1);
        float i1 = r.nextInt((int) (max - min)) + min;
        //float i1 = r.nextInt((int) (a - (a - (a-1)))) + (a - (a-1));
        
        SensorValue sv = new SensorValue();
        sv.setFlowrate(b);
        
        if(b == customer.getSourceSensor().getSensorValue().getFlowrate()){
            sv.setPressure(a);
        }
        else if(b == 0){
            sv.setPressure(0);
        }
        else{
            sv.setPressure(i1);
        }
        
        sv.setDate(new Date());
        customer.getTargetSensor().getSensorValueList().add(sv);
        populateTable();
        flow.setText("");

        this.sensorValue = customer.getTargetSensor().getSensorValueList().get(customer.getTargetSensor().getSensorValueList().size() -1);
        
        if(sv.getFlowrate() < customer.getSourceSensor().getSensorValue().getFlowrate()){

            flow.setEnabled(false);
            leakage.setEnabled(false);
        }
    }//GEN-LAST:event_leakageActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField flow;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton leakage;
    private javax.swing.JLabel name;
    private javax.swing.JLabel sensorName;
    private javax.swing.JTable table;
    private javax.swing.JTextField volume;
    // End of variables declaration//GEN-END:variables
}
