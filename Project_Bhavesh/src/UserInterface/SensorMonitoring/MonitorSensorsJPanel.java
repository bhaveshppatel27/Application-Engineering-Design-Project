/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SensorMonitoring;

import Business.Customer.Customer;
import Business.Employee.Employee;
import Business.WaterSupplyAdmin.SensorValue;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bhavesh Patel
 */
public class MonitorSensorsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form MonitorSensorsJPanel
     */
    private JPanel container;
    private Organization organization;
    private UserAccount userAccount;
    private Organization organization1;
    public MonitorSensorsJPanel(JPanel container,UserAccount userAccount,Organization organization) {
        initComponents();

        this.container = container;
        this.userAccount = userAccount;
        this.organization = organization;
        name.setText(userAccount.getEmployee().getName());
        
        
        populateTable();
        populateCustomer();
        custTable.setAutoCreateRowSorter(true);
        table.setAutoCreateRowSorter(true);
    }

    private void populateCustomer(){
        DefaultTableModel model = (DefaultTableModel) custTable.getModel();
        model.setRowCount(0);
        for(Employee employee : organization.getEmployeeDirectory().getEmployeeList()){
            Customer customer = (Customer) employee;
            Object[] row = new Object[2];
            row[0] = customer.getId();
            row[1] = customer;
            
            model.addRow(row);
        
          
        }
    }
    private void populateTable(){
        
         DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        
        for(Employee employee : organization.getEmployeeDirectory().getEmployeeList()){
            Customer customer = (Customer) employee;

        for(SensorValue sensorValue : customer.getTargetSensor().getSensorValueList()){
            
         
            Object[] row = new Object[6];
            row[0] = customer;
            row[1] = customer.getSourceSensor().getSensorValue().getFlowrate();
            row[2] = customer.getSourceSensor().getSensorValue().getPressure();
            row[3] = sensorValue.getFlowrate();
            row[4] = sensorValue.getPressure();
            row[5] = sensorValue.getDate();
            model.addRow(row);
        
        }   
        }
    }
    
     private void populateCustomerTable(Customer customer){
        
         DefaultTableModel model = (DefaultTableModel) table.getModel(); 
        model.setRowCount(0);
        

        for(SensorValue sensorValue : customer.getTargetSensor().getSensorValueList()){
            
         
            Object[] row = new Object[6];
            row[0] = customer;
            row[1] = customer.getSourceSensor().getSensorValue().getFlowrate();
            row[2] = customer.getSourceSensor().getSensorValue().getPressure();
            row[3] = sensorValue.getFlowrate();
            row[4] = sensorValue.getPressure();
            row[5] = sensorValue.getDate();
            model.addRow(row);
        
           
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        custTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Customer", "Source Flow Rate", "Source Pressure", "Target Flow Rate", "Target Pressure", "TimeStamp"
            }
        ));
        jScrollPane1.setViewportView(table);

        custTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "CustomerID", "Customer Name"
            }
        ));
        custTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                custTableMouseClicked(evt);
            }
        });
        custTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                custTableKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(custTable);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Censor Values");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Select a customer to view customer specific values");

        jButton1.setText("Show for all Customers");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setText("Monitoring Person : ");

        name.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N

        jButton3.setText("<<Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addGap(39, 39, 39)
                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(924, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 802, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(165, 165, 165))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(74, 74, 74)
                .addComponent(jLabel2)
                .addGap(42, 42, 42)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(jLabel1)
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(31, 31, 31))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void custTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_custTableMouseClicked
        int selectedRow = custTable.getSelectedRow();
        Customer customer = (Customer)custTable.getValueAt(selectedRow, 1);
        populateCustomerTable(customer);
        
    }//GEN-LAST:event_custTableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        populateTable();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void custTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_custTableKeyReleased
        
        int selectedRow = custTable.getSelectedRow();
        Customer customer = (Customer)custTable.getValueAt(selectedRow, 1);
        populateCustomerTable(customer);
    }//GEN-LAST:event_custTableKeyReleased
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable custTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel name;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
