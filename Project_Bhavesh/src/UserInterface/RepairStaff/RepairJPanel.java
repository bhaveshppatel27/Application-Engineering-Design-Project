/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.RepairStaff;

import Business.Customer.Customer;
import Business.Enterprise.Enterprise;
import Business.Enterprise.FinanceEnterprise;
import Business.Enterprise.RepairEnterprise;
import Business.Network.Network;
import Business.Organization.AccountsOrganization;
import Business.Organization.Organization;
import Business.Organization.RepairManagerOrganization;
import Business.WaterSupplyAdmin.SensorValue;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.RepairRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import java.util.Random;
import javax.swing.JPanel;

/**
 *
 * @author Bhavesh Patel
 */
public class RepairJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RepairJPanel
     */
    private JPanel container;
    private UserAccount userAccount;
    private Customer customer;
    private RepairRequest request;
    private Network network;
    private long tStart;
    private long tStop;
    public RepairJPanel(JPanel container,UserAccount userAccount,Customer customer,RepairRequest request,Network network) {
        initComponents();
        this.request = request;
        this.userAccount = userAccount;
        this.container = container;
        this.customer = customer;
        this.network = network;
        stop.setEnabled(false);
        
        label.setText("Leakage between " + customer.getSourceSensor().getLocation() + " and " + customer.getTargetSensor().getLocation());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        start = new javax.swing.JButton();
        stop = new javax.swing.JButton();
        back = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        label = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        setBackground(new java.awt.Color(255, 255, 255));

        start.setText("Start Repair");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        stop.setText("Complete Repair");
        stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopActionPerformed(evt);
            }
        });

        back.setText("<<Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Repair Panel");

        label.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(back))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(440, 440, 440)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(stop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(689, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 1069, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69)
                .addComponent(start)
                .addGap(71, 71, 71)
                .addComponent(stop)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 149, Short.MAX_VALUE)
                .addComponent(back)
                .addGap(53, 53, 53))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopActionPerformed
        
        //calulating repair time
        tStop = System.currentTimeMillis();
        long tDelta = tStop - tStart;
        double totalTime = tDelta / 1000.0;
        
        //Calulating Repair cost randomly
        Random r = new Random();
        int i1 = r.nextInt(10 - 5) + 5;
        
        //calculating leakage flowrate
        SensorValue sensorValue = (customer.getTargetSensor().getSensorValueList().get(customer.getTargetSensor().getSensorValueList().size() - 1));
        float sourceFlowRate = customer.getSourceSensor().getSensorValue().getFlowrate();
        float leakageFlowRate = sourceFlowRate -sensorValue.getFlowrate();
        
        //set values in this request
        request.setTimeForRepair(totalTime);
        request.setLeakageVolume(totalTime * leakageFlowRate);
        request.setResolveDate(new Date());
        request.setStatus("Complete");
        request.setRepairResult("Leakage Fixed");
        request.setRepairCost(i1);
        
        //Repair Done now target sensor value is updated as source values
        SensorValue sensorValue1 = new SensorValue();
        sensorValue1.setFlowrate(sourceFlowRate);
        sensorValue1.setPressure(customer.getSourceSensor().getSensorValue().getPressure());
        sensorValue1.setDate(new Date());
        customer.getTargetSensor().getSensorValueList().add(sensorValue1);
        customer.setVolumeAvailable(customer.getSourceSensor().getSupplyVolume());
        
        
        //Go Back and update table
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
        
        int index = container.getComponentCount() - 1;
        ResolveRequestsJPanel panel = (ResolveRequestsJPanel) container.getComponent(index);
        panel.populateRequestTable();
        
        for(Enterprise enterprise1 : network.getEnterpriseDirectory().getEnterpriseList()){
            if(enterprise1 instanceof FinanceEnterprise){
                for(Organization organization1 : enterprise1.getOrganizationDirectory().getOrganizationList()){
                    if(organization1 instanceof AccountsOrganization){
                        organization1.getWorkQueue().getWorkRequestList().add((WorkRequest)request);
                    }
                }
            }
        }
        
    }//GEN-LAST:event_stopActionPerformed

    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
       
        tStart = System.currentTimeMillis();
        start.setEnabled(false);
        stop.setEnabled(true);
        back.setEnabled(false);
    }//GEN-LAST:event_startActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed

        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);

    }//GEN-LAST:event_backActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel label;
    private javax.swing.JButton start;
    private javax.swing.JButton stop;
    // End of variables declaration//GEN-END:variables
}
